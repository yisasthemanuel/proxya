<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jlobato.seta</groupId>
	<artifactId>API_SETA</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>API_SETA_01</name>
	<description>Ejemplo de uso de API SETA</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.RC1</spring-cloud.version>
		<docker.image.prefix>cteicu</docker.image.prefix>
		<redmine-java-api.version>3.1.2</redmine-java-api.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.taskadapter/redmine-java-api -->
		<dependency>
    		<groupId>com.taskadapter</groupId>
    		<artifactId>redmine-java-api</artifactId>
    		<version>${redmine-java-api.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- Micrometer core dependecy  -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
		<!-- Micrometer Prometheus registry  -->
		<dependency>
    		<groupId>io.micrometer</groupId>
    		<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		
		
		<dependency>
		    <groupId>commons-beanutils</groupId>
		    <artifactId>commons-beanutils</artifactId>
		    <version>1.9.3</version>
		</dependency>
		<dependency>
    		<groupId>org.apache.poi</groupId>
    		<artifactId>poi-ooxml</artifactId>
    		<version>3.15</version>
  		</dependency>
  		<dependency>
    		<groupId>commons-io</groupId>
    		<artifactId>commons-io</artifactId>
    		<version>2.6</version>
		</dependency>
		
		<!-- Google API -->
		<dependency>
    		<groupId>com.google.api-client</groupId>
    		<artifactId>google-api-client</artifactId>
    		<version>1.23.0</version>
		</dependency>
		<dependency>
    		<groupId>com.google.oauth-client</groupId>
    		<artifactId>google-oauth-client-jetty</artifactId>
    		<version>1.23.0</version>
		</dependency>
		<dependency>
    		<groupId>com.google.apis</groupId>
    		<artifactId>google-api-services-sheets</artifactId>
    		<version>v4-rev493-1.23.0</version>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>	

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>

		<resources>
			<resource>
			<!-- Para evitar aplicar el filtrado sobre los certificados para https -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>cacerts</exclude>
					<exclude>personas.ser</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>cacerts</include>
					<include>personas.ser</include>
				</includes>
			</resource>
		</resources>
	
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>dockerfile-maven-plugin</artifactId>
	            <version>1.4.9</version>
	            <configuration>
	                <repository>${docker.image.prefix}/api_seta</repository>
		            <imageName>${docker.image.prefix}/api_seta</imageName>
		            <serverId>docker-hub</serverId>
		            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
         			<registryUrl>https://index.docker.io/v1/</registryUrl>
        	 		<forceTags>true</forceTags>
         			<imageTags>
           				<imageTag>${project.version}</imageTag>
         			</imageTags>
         			<resources>
           				<resource>
             				<targetPath>/</targetPath>
             				<directory>${project.build.directory}</directory>
             				<include>${project.build.finalName}.jar</include>
           				</resource>
         			</resources>
      				<buildArgs>
        				<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
      				</buildArgs>
	            </configuration>
	            <executions>
	         		<execution>
	           			<id>build-image</id>
	           			<phase>package</phase>
	           			<goals>
	             			<goal>build</goal>
	           			</goals>
	           			<configuration>
	          	   			<imageName>${docker.image.prefix}/api_seta:${project.version}</imageName>
	          	   			<tag>${project.version}</tag>
	           			</configuration>
	         		</execution>
	         		<execution>
	           			<id>push-image</id>
	           			<phase>install</phase>
	           			<goals>
	             			<goal>push</goal>
	           			</goals>
	           			<configuration>
	          	   			<imageName>${docker.image.prefix}/api_seta:${project.version}</imageName>
	          	   			<tag>${project.version}</tag>
	           			</configuration>
	         		</execution>
	       		</executions>
        	</plugin>		
		</plugins>
		
	</build>
	
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>
	
</project>
